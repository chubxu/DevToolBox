{"version":3,"file":"js/741.c5876c51.js","mappings":"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","sources":["webpack://dev-tool-box/./src/views/aigc/ChatGPT.vue","webpack://dev-tool-box/./src/views/aigc/components/ChatMessage.vue","webpack://dev-tool-box/./src/views/aigc/components/ChatMessage.vue?6841","webpack://dev-tool-box/./src/views/aigc/ChatGPT.vue?052b"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- title -->\r\n    <el-row class=\"title\">\r\n      ChatGPT\r\n    </el-row>\r\n\r\n    <!-- chat -->\r\n    <div class=\"chat\">\r\n      <div class=\"chat__header\">\r\n        <span class=\"chat__header__greetings\">\r\n          Chat Room\r\n        </span>\r\n      </div>\r\n      <div class=\"chat__body\" id=\"chat__body\">\r\n        <ChatMessage v-for=\"(message, index) in messageList\" :key=\"index\" :message=\"message\" :prev=\"[index == 0 ? null : messageList[index - 1]]\" />\r\n      </div>\r\n      <div class=\"form\">\r\n        <input class=\"form__input\" type=\"text\" placeholder=\"pls input...\" v-model.trim=\"prompt\" @keyup.enter=\"sendMessage\" />\r\n        <el-icon :size=\"14\"><IconPromotion /></el-icon>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatMessage from \"./components/ChatMessage.vue\";\r\nimport {\r\n  Promotion as IconPromotion,\r\n} from '@element-plus/icons-vue'\r\n// import { Configuration, OpenAIApi } from 'openai'\r\nexport default {\r\n  name: 'ChatGPT',\r\n  \r\n  components: {\r\n    ChatMessage,\r\n    IconPromotion,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      messageList: [],\r\n      prompt: \"\",\r\n\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    sendMessage() {\r\n      let userMessage = {\r\n        message: this.prompt,\r\n        user: {\r\n          username: 'user',\r\n          avatar: require('@/assets/images/user-avatar.png'),\r\n        }\r\n      }\r\n      this.messageList.push(userMessage)\r\n\r\n      let chatGptMessage = {\r\n        message: this.doSendMessageToChatGPT(this.prompt),\r\n        user: {\r\n          userName: 'ChatGPT',\r\n          avatar: require('@/assets/images/chatgpt.png'),\r\n        }\r\n      }\r\n      this.messageList.push(chatGptMessage)\r\n\r\n      this.scrollToBottom()\r\n    },\r\n\r\n    doSendMessageToChatGPT(prompt) {\r\n      console.log(prompt)\r\n      // TODO openai调用\r\n      this.chapGptOpenApi()\r\n      return 'ChatGPT'\r\n    },\r\n\r\n    async chapGptOpenApi() {\r\n      console.log('aaa')\r\n      // const configuration = new Configuration({\r\n      //   apiKey: \"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\",\r\n      // });\r\n      // const openai = new OpenAIApi(configuration);\r\n      // try {\r\n      //   const response = await openai.createCompletion({\r\n      //     model: \"text-davinci-003\",\r\n      //     prompt: \"Say this is a test\",\r\n      //     temperature: 0,\r\n      //     max_tokens: 7,\r\n      //   });\r\n      //   console.log(response.data.choices[0].text)\r\n      // } catch (err) {\r\n      //   console.log(err)\r\n      // }\r\n    },\r\n\r\n    scrollToBottom() {\r\n      setTimeout(() => {\r\n        const element = document.getElementById(\"chat__body\");\r\n        element.scrollTop = element.scrollHeight;\r\n      }, 0);\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.title {\r\n  font-size: var(--el-font-size-extra-large); \r\n  font-weight: bold;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.chat {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.chat__header {\r\n  background: #ffffff;\r\n  box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.1);\r\n  border-radius: 16px 16px 0px 0px;\r\n  padding: 15px;\r\n  \r\n  width: 700px;\r\n  z-index: 2;\r\n}\r\n\r\n.chat__header__greetings {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #292929;\r\n}\r\n\r\n.chat__body {\r\n  background: #ffffff;\r\n  width: 700px;\r\n  height: 500px;\r\n  padding: 15px;\r\n  box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.1);\r\n  overflow: scroll;\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n.chat__body::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 15px;\r\n  width: 700px;\r\n  background: #ffffff;\r\n  border-radius: 0px 0px 16px 16px;\r\n  box-shadow: 0px -5px 30px rgba(0, 0, 0, 0.1);\r\n  z-index: 2;\r\n}\r\n\r\n.form__input {\r\n  border: none;\r\n  padding: 0.5rem;\r\n  font-size: 16px;\r\n  width: calc(100% - 60px);\r\n}\r\n\r\n.form__input:focus {\r\n  outline: none;\r\n}\r\n\r\n.form__submit {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n</style>","<template>\n  <div>\n    <div v-if=\"message.user.username === 'user'\" class=\"chat__mymessage\" :class=\"[isSame ? '' : 'chat__first']\">\n      <p class=\"chat__mymessage__paragraph\">{{ message.message }}</p>\n      <div class=\"chat__message__avartar\">\n        <img :src=\"avatar\" alt=\"\" v-if=\"!isSame\" class=\"chat__yourmessage__img\"/>\n      </div>\n    </div>\n    <div v-else class=\"chat__yourmessage\" :class=\"[isSame ? '' : 'chat__first']\">\n      <div class=\"chat__yourmessage__avartar\">\n        <img :src=\"avatar\" alt=\"\" v-if=\"!isSame\" class=\"chat__yourmessage__img\"/>\n      </div>\n      <div>\n        <p class=\"chat__yourmessage__user\" v-if=\"!isSame\">\n          {{ message.user.username }}\n        </p>\n        <div class=\"chat__yourmessage__p\">\n          <p class=\"chat__yourmessage__paragraph\">\n            {{ message.message }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [\"message\", \"prev\"],\n  data() {\n    return {\n      isSame: false,\n      avatar: '',\n    };\n  },\n  methods: {\n    isSamePerson(msg, prev) {\n      if (prev === null) {\n        return false;\n      } else if (prev[0]?.user.username == msg?.user.username) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n  },\n  created() {\n    this.isSame = this.isSamePerson(this.message, this.prev);\n    if (this.message?.user.avatar) {\n      this.avatar = this.message?.user.avatar;\n    }\n  },\n};\n</script>\n\n<style>\n.chat__first {\n  margin-top: 20px;\n}\n\n.chat__mymessage {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: flex-end;\n  margin: 0;\n  min-height: 40px;\n  line-break: anywhere;\n}\n\n.chat__mymessage__paragraph {\n  margin: 0 0 0.4rem 1rem;\n  border-radius: 8px 8px 0px 8px;\n  max-width: 180px;\n  background-color: #b2e281;\n  color: #292929;\n  padding: 0.8rem;\n  font-size: 14px;\n}\n\n.chat__message__avartar {\n  width: 40px;\n  margin-left: 1rem;\n}\n\n.chat__yourmessage {\n  display: flex;\n}\n\n.chat__yourmessage__avartar {\n  width: 40px;\n  margin-right: 1rem;\n}\n\n.chat__yourmessage__img {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.chat__yourmessage__user {\n  font-size: 14px;\n  font-weight: 700;\n  color: #292929;\n  margin-top: 0;\n  margin-block-end: 0rem;\n}\n\n.chat__yourmessage__p {\n  display: flex;\n  align-items: flex-end;\n  line-break: anywhere;\n}\n\n.chat__yourmessage__paragraph {\n  margin: 0.4rem 1rem 0 0;\n  border-radius: 0px 8px 8px 8px;\n  background-color: #f3f3f3;\n  max-width: 180px;\n  color: #414141;\n  padding: 0.8rem;\n  font-size: 14px;\n}\n\n.chat__yourmessage__time {\n  margin: 0;\n  font-size: 12px;\n  color: #9c9c9c;\n}\n</style>\n","import { render } from \"./ChatMessage.vue?vue&type=template&id=877d8970\"\nimport script from \"./ChatMessage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatMessage.vue?vue&type=script&lang=js\"\n\nimport \"./ChatMessage.vue?vue&type=style&index=0&id=877d8970&lang=css\"\n\nimport exportComponent from \"H:\\\\Code\\\\MyOpensource\\\\dev-tools\\\\node_modules\\\\_vue-loader@17.0.1@vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ChatGPT.vue?vue&type=template&id=d5f1de7e&scoped=true\"\nimport script from \"./ChatGPT.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPT.vue?vue&type=script&lang=js\"\n\nimport \"./ChatGPT.vue?vue&type=style&index=0&id=d5f1de7e&scoped=true&lang=css\"\n\nimport exportComponent from \"H:\\\\Code\\\\MyOpensource\\\\dev-tools\\\\node_modules\\\\_vue-loader@17.0.1@vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d5f1de7e\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","id","_createElementBlock","_createVNode","_component_el_row","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","$data","message","index","_createBlock","_component_ChatMessage","key","prev","_hoisted_4","type","placeholder","onKeyup","$options","_component_el_icon","size","_component_IconPromotion","$props","user","username","src","alt","_hoisted_6","_hoisted_7","_hoisted_8","props","data","isSame","avatar","methods","isSamePerson","msg","created","this","__exports__","name","components","ChatMessage","IconPromotion","messageList","prompt","sendMessage","userMessage","require","push","chatGptMessage","doSendMessageToChatGPT","userName","scrollToBottom","console","log","chapGptOpenApi","async","setTimeout","element","document","getElementById","scrollTop","scrollHeight","render"],"sourceRoot":""}